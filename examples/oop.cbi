// Base class for all humans
class Human:
	// Define a constant pub property 'quote'
	pub const quote: String = "I think therefore I am"

	// Define a pub property 'name'
	pub var name: String
	
	// Define a constructor 
	pub func new(name: String) -> self:
		self.name = name	
	end

	// Add another version of the constructor (overload) that doesn't need a name
	pub func new() -> self:
		self.new("Grzegorz BrzÄ™czyszczykiewicz")
	end

	// Public method 'greet'
	pub func greet(another: Human):
		self.say(`Hello, {another.name}`)
	end

	// Public method 'say'
	pub func say(message: String):
		print(`{self.name} says: {message}`)
	end

	// Public method 'sayQuote'
	pub func sayQuote():
		say(self.quote)
	end
end

// Nerd class, based on Human
class Nerd of Human:
	// override 'quote'. Property type doesn't have to repeated
	quote = "btw I use arch"
end

// Programmer class, based on Nerd
class Programmer of Nerd: 
	quote = "[high pitched demonic screaming]"
end

private someProgrammer = Programmer("Wolfyxon")
someProgrammer.sayQuote()